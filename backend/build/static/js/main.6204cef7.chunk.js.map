{"version":3,"sources":["components/Login.js","components/Song.js","components/TopArtists.js","components/Player.js","components/Dashboard.js","useSpotify.js","components/App.js","index.js"],"names":["authorizationUrl","join","Login","className","title","href","Song","albumImage","artistName","songName","itemUri","handleClick","onClick","src","alt","TopArtists","artistImage","Player","accessToken","selectedSongUri","useState","play","setPlay","useEffect","token","uris","showSaveIcon","callback","state","isPlaying","spotifyApi","SpotifyWebApi","clientId","Dashboard","code","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","axios","post","then","res","data","window","history","pushState","catch","err","console","log","interval","setInterval","error","clearInterval","useSpotify","search","setSearch","searchResults","setSearchResults","userFirstName","setUserFirstName","userTopArtists","setUserTopArtists","setSelectedSongUri","getMe","displayName","body","display_name","split","getMyTopArtists","limit","results","items","map","artist","id","image","images","url","name","searchTracks","tracks","item","uri","album","artists","songList","topArtists","placeholder","value","onChange","e","target","URLSearchParams","location","get","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6204cef7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Login.css\";\n\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst clientId = \"7edf92de95194f8a8d4da091d1380be9\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\n    \"user-read-currently-playing\", // read access to a user's currently playing content\n    \"user-read-recently-played\", // read access to a user's recently played tracks\n    \"user-read-playback-state\", // read access to a user's player state\n    \"user-top-read\", // read access to a user's top artists and trakcs\n    \"user-modify-playback-state\", // write access to a user's playback state\n    \"user-read-email\",\n    \"user-library-read\",\n    \"user-read-private\",\n    \"streaming\",\n  ];\n\n\nconst authorizationUrl = `${authEndpoint}?client_id=${clientId}&response_type=code&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}`\n\nconst Login = () => {\n    return (\n            <div className=\"login-container\">\n            <h1 className=\"login-header\">Spotify</h1>\n                <a className=\"login-btn\" title=\"login-button\" href={authorizationUrl}>Login With Spotify</a>\n            </div>\n    );\n};\n\nexport default Login;","import React from \"react\";\nimport \"../styles/Song.css\";\n\nconst Song = ({ albumImage, artistName, songName, itemUri, handleClick }) => {\n    \n    return (\n        <div className=\"individual-song\" onClick={() => handleClick(itemUri)}>\n            <img src={albumImage} alt=\"Album Cover\" />\n            <div className=\"song-artist-text\">\n                <p>{songName}</p>\n                <p>{artistName}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Song;","import React from \"react\";\nimport \"../styles/TopArtists.css\";\n\nconst TopArtists = ({ artistName, artistImage }) => {\n    return (\n        \n        <div className=\"individual-artist\">\n            <h1 className=\"artist-text\">{artistName}</h1>\n            <img src={artistImage} alt=\"artist pic\"/>\n        </div>\n    )\n};\n\nexport default TopArtists;","import React, { useEffect, useState } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nconst Player = ({ accessToken, selectedSongUri }) => {\n    const [play, setPlay] = useState(false);\n\n    useEffect(() => {\n        setPlay(true)\n    }, [selectedSongUri]);\n\n\n    if (!accessToken) return null;\n    return (\n        <div>\n            <SpotifyPlayer \n                token={accessToken}\n                uris={selectedSongUri ? [selectedSongUri] : null}\n                showSaveIcon\n                callback={state => {\n                    if (!state.isPlaying) setPlay(false);\n                }}\n                play={play}\n            />\n        </div>\n    )\n};\n\nexport default Player;","import React, { useState, useEffect } from \"react\";\nimport Song from \"./Song\";\nimport TopArtists from \"./TopArtists\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport Player from \"./Player\";\nimport useSpotify from \"../useSpotify\";\nimport \"../styles/Dashboard.css\";\n\nconst spotifyApi = new SpotifyWebApi({\n    clientId: \"7edf92de95194f8a8d4da091d1380be9\"\n});\n\nconst Dashboard = ({ code }) => {\n    const accessToken = useSpotify(code);\n\n    const [search, setSearch] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n    const [userFirstName, setUserFirstName] = useState(\"\");\n    const [userTopArtists, setUserTopArtists] = useState([]);\n    const [selectedSongUri, setSelectedSongUri] = useState();\n    \n    const handleClick = (itemUri) => {\n        setSelectedSongUri(itemUri);\n    }\n\n    useEffect(() => {\n        if (!accessToken) return;\n        spotifyApi.setAccessToken(accessToken);\n    }, [accessToken]);\n\n    useEffect(() => {\n        if (!accessToken) return;\n\n        spotifyApi.getMe().then(res => {\n            const displayName = res.body.display_name;\n            setUserFirstName(displayName.split(\" \")[0]);\n        }).catch(err => {\n            console.log({error: err});\n        });\n    }, [accessToken]);\n\n    useEffect(() => {\n        if (!accessToken) return\n\n        spotifyApi.getMyTopArtists({ limit: 10 }).then(res => {\n            let results = res.body.items;\n\n            setUserTopArtists(results.map(artist => {\n                return {\n                    id: artist.id,\n                    image: artist.images[2].url,\n                    name: artist.name\n                }\n            }));\n        }).catch(err => {\n            console.log(err);\n        });\n    }, [accessToken]);\n\n    useEffect(() => {\n        if (!search) return\n\n        spotifyApi.searchTracks(search).then(res => {\n            let results = res.body.tracks.items;\n\n            setSearchResults(\n                results.map(item => {\n                    return {\n                        id: item.id,\n                        itemUri: item.uri,\n                        songName: item.name,\n                        albumImage: item.album.images[2].url,\n                        artistName: item.artists[0].name\n                    }\n                })\n            );\n        }).catch(err => {\n            console.log(err);\n        });\n\n    }, [search, accessToken]);\n\n    const songList = searchResults.map(item => {\n        return <Song key={item.id} \n            itemUri={item.itemUri}\n            albumImage={item.albumImage} \n            artistName={item.artistName} \n            songName={item.songName} \n            handleClick={handleClick} \n            />\n    });\n\n    const topArtists = userTopArtists.map(artist => {\n        return <TopArtists key={artist.id}\n                artistImage={artist.image}\n                artistName={artist.name}\n            />\n    });\n\n\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"dashboard-header-bg\">\n                <h1 className=\"dashboard-header\">Welcome, {userFirstName}!</h1>\n                <h4 className=\"top-artists-header\" >{!search ? \"Your top artists are listed below!\" : null}</h4>\n                <input className=\"search-bar\" placeholder=\"Search for Artists/Songs...\" value={search} onChange={(e) => setSearch(e.target.value)} />\n            </div>\n            <div className={!search ? \"top-artists-container\" : \"songs-container\"}>\n                {!search ? topArtists : songList}\n            </div>\n            <Player accessToken={accessToken} selectedSongUri={selectedSongUri} />\n        </div>\n    );\n};\n\nexport default Dashboard;","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function useSpotify(code) {\n\n  const [accessToken, setAccessToken] = useState()\n  const [refreshToken, setRefreshToken] = useState()\n  const [expiresIn, setExpiresIn] = useState()\n\n  useEffect(() => {\n\n    axios.post(\"/login\", {\n        code,\n      }).then(res => {\n        setAccessToken(res.data.accessToken)\n        setRefreshToken(res.data.refreshToken)\n        setExpiresIn(res.data.expiresIn)\n        window.history.pushState(null, null, \"/\")\n      }).catch((err) => {\n        console.log(err)\n      });\n\n  }, [code]);\n\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return\n\n    const interval = setInterval(() => {\n      axios.post(\"/refresh\", {\n          refreshToken,\n        })\n        .then(res => {\n          setAccessToken(res.data.accessToken)\n          setExpiresIn(res.data.expiresIn)\n        })\n        .catch((err) => {\n          console.log({error: err})\n        })\n    }, (expiresIn - 60) * 1000)\n\n    return () => clearInterval(interval)\n\n  }, [refreshToken, expiresIn])\n\n  return accessToken;\n}","import React from \"react\";\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport '../styles/App.css';\n\n// this will get the code from the url\nconst code = new URLSearchParams(window.location.search).get(\"code\");\n\nconst App = () => {\n    return code ? <Dashboard code={code} /> : <Login />\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}